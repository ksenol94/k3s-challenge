apiVersion: batch/v1
kind: CronJob
metadata:
  name: postgresql-backup
  labels:
    app: postgresql
spec:
  schedule: "{{ .Values.backup.schedule }}"
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: postgresql
        spec:
          restartPolicy: Never
          containers:
            - name: pgdump
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
              command: ["/bin/bash", "-lc"]
              args:
                - |
                  mkdir -p "{{ .Values.backup.path }}";
                  export PGPASSWORD="$(cat /secrets/POSTGRES_PASSWORD)";
                  ts="$(date +%Y%m%d-%H%M%S)";
                  outfile="{{ .Values.backup.path }}/backup-$ts.sql.gz";
                  echo "[Backup] Starting pg_dump to $outfile";
                  pg_dump -h postgresql -U "$(cat /secrets/POSTGRES_USER)" "$(cat /secrets/POSTGRES_DB)" | gzip > "$outfile";
                  find "{{ .Values.backup.path }}" -type f -mtime +{{ .Values.backup.retentionDays }} -delete;
                  echo "[Backup] Done.";
              volumeMounts:
                - name: data
                  mountPath: /var/lib/postgresql/data
                - name: secret-vol
                  mountPath: /secrets
                  readOnly: true
          volumes:
            - name: data
              persistentVolumeClaim:
                claimName: data-postgresql-0
            - name: secret-vol
              secret:
                secretName: postgresql-secret